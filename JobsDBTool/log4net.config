<log4net>
  <!-- 错误日志类-->
  <logger name="logerror">
    <!-- 定义记录的日志级别, 级别由高往低依次是
None
Fatal       很严重的错误
ERROR       错误消息
WARN        警告消息
DEBUG       调试信息
INFO        信息消息
ALL
级别的定义要注意,如果你定义DEBUG,那么低于DEBUG级别以下的信息,将不会记入日志,啥意思呢?就是说,就算你在程序里,用log.info()来写入一个日志信息,可是你在配置中指定level为DEBUG,由于INFO级别低于DEBUG,所以,不会被记入日志.这样的处理非常灵活
-->
    <level value="ERROR" />
    <!-- 记录到什么介质中-->
    <appender-ref ref="ErrorAppender" />
  </logger>
  <!-- 信息日志类 -->
  <logger name="loginfo">
    <level value="ALL" />
    <appender-ref ref="InfoAppender" />
  </logger>

  <logger name="logevent">
    <level value="ALL" />
    <appender-ref ref="EventLogAppender" />
  </logger>

  <!-- 错误日志附加介质-->
  <!-- name属性指定其名称,type则是log4net.Appender命名空间的一个类的名称,意思是,指定使用哪种介质-->
  <!--RollingFileAppender 的意思是将日志以回滚文件的形式写到文件中-->
  <appender name="ErrorAppender" type="log4net.Appender.RollingFileAppender">
    <param name="encoding" value="utf-8"></param>
    <!-- 输出到什么目录  程序输入目录（Debug目录）\Log\LogError\-->
    <param name="File" value="Logs\\LogError\\" />
    <!-- 是否覆写到文件中
        假设我们已经有了一个20131028.htm日志文件，当为true的时候，日志文件会附加到这个文件上。为false的时候，Log4Net会先将原来的日志文件备份，生成一个新的日志文件
    -->
    <param name="AppendToFile" value="true" />
    <!-- 备份文件的个数 可以使用"KB", "MB" 或 "GB"为 MaxFileSize 作为后缀限定大小。默认的文件大小是10MB-->
    <param name="MaxSizeRollBackups" value="10" />
    <!-- 单个日志文件最大的大小  当日志文件达到MaxFileSize大小，就自动创建备份文件。备份文件的多少由MaxSizeRollBackups决定-->
    <param name="MaxFileSize" value="10240" />
    <!-- 是否使用静态文件名 
        因为我们这个例子是采用以日期作为文件名，每天的日志文件的名字都是动态的，所以上例中为false。如果采用静态文件名，那么日志文件的名字就是唯一确定的。可以参考下面的配置文件进行设置。下面的配置文件中就是采用静态文件名，生成的日志文件名都是log.txt
<appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
    <file value="log.txt" />
    <appendToFile value="true" />
    <rollingStyle value="Size" />
    <maxSizeRollBackups value="10" />
    <maximumFileSize value="100KB" />
    <staticLogFileName value="true" />
    <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline" />
    </layout>
</appender>
     -->
    <param name="StaticLogFileName" value="false" />
    <!-- 日志文件名  日期格式，当我们设置了RollingStyle 为Date方式后，Log4Net会自动使用DatePattern 中的日期格式来创建新的日志文件-->
    <param name="DatePattern" value="yyyyMMdd&quot;.html&quot;" />
    <!--文件创建的方式。例中是设置为以Date方式创建新文件-->
    <param name="RollingStyle" value="Date" />
    <!--布局-->
    <layout type="log4net.Layout.PatternLayout">
      <param name="ConversionPattern" value="&lt;HR COLOR=red&gt;%n【异常时间】：%d [%t] &lt;BR&gt;%n【异常级别】：%-5p &lt;BR&gt;%n【异 常 类】：%c [%x] &lt;BR&gt;%n%m &lt;BR&gt;%n &lt;HR Size=1&gt;"  />
    </layout>
  </appender>
  <!-- 信息日志附加介质-->
  <appender name="InfoAppender" type="log4net.Appender.RollingFileAppender" encoding="utf-8">
    <param name="encoding" value="utf-8"></param>
    <param name="File" value="Logs\\LogInfo\\" />
    <param name="AppendToFile" value="true" />
    <param name="MaxFileSize" value="1" />
    <param name="MaxSizeRollBackups" value="10" />
    <param name="StaticLogFileName" value="false" />
    <param name="DatePattern" value="yyyyMMdd&quot;.html&quot;" />
    <param name="RollingStyle" value="Date" />
    <!-- 信息日志布局
%m[%message]	输出的日志消息
%n	换行
%d[%datetime]	输出当前语句运行的时刻
%r 	输出程序从运行到执行到当前语句时消耗的毫秒数
%d	当前语句所在的线程ID
%p	日志的当前优先级别
%c	当前日志对象的名称
%L 	输出语句所在的行号
%F	输出语句所在的文件名
%-数字 	表示该项的最小长度，如果不够，则用空格填充
    -->
    <layout type="log4net.Layout.PatternLayout">
      <param name="ConversionPattern" value="&lt;HR COLOR=blue&gt;%n日志时间：%d [%t] &lt;BR&gt;%n日志级别：%-5p &lt;BR&gt;%n日 志 类：%c [%x] &lt;BR&gt;%n日志内容：%n%m &lt;BR&gt;%n &lt;HR Size=1&gt;"  />
    </layout>
  </appender>

  <appender name="EventLogAppender" type="log4net.Appender.EventLogAppender" >
    <!--logName default value is Application-->
    <LogName value="WorkDemo.Tests.EventLog.LogName" />
    <applicationName value="WorkDemo.Tests.EventLog.AppName" />
    <layout type="log4net.Layout.PatternLayout">
      <param name="ConversionPattern" value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline" />
    </layout>
  </appender>
</log4net>
