
// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `MsSql_Workspaces_Common`
//     Provider:               `System.Data.SqlClient`
//     Connection String:      `Server=localhost; Database=Workspaces_Common; User Id=sa; password=**zapped**;`
//     Schema:                 ``
//     Include Views:          `False`

using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using PetaPoco;

namespace WorkDemo.Tests.Models
{
	public partial class PPUtils : Database
	{
		public PPUtils() 
			: base("MsSql_Workspaces_Common")
		{
			CommonConstruct();
		}

		public PPUtils(string connectionStringName) 
			: base(connectionStringName)
		{
			CommonConstruct();
		}
		
		partial void CommonConstruct();
		
		public interface IFactory
		{
			PPUtils GetInstance();
		}
		
		public static IFactory Factory { get; set; }
        public static PPUtils GetInstance()
        {
			if (_instance!=null)
				return _instance;
				
			if (Factory!=null)
				return Factory.GetInstance();
			else
				return new PPUtils();
        }

		[ThreadStatic] static PPUtils _instance;
		
		public override void OnBeginTransaction()
		{
			if (_instance==null)
				_instance=this;
		}
		
		public override void OnEndTransaction()
		{
			if (_instance==this)
				_instance=null;
		}
        
		public class Record<T> where T:new()
		{
			public static PPUtils repo { get { return PPUtils.GetInstance(); } }
			public bool IsNew() { return repo.IsNew(this); }
			public object Insert() { return repo.Insert(this); }
			public int Update(IEnumerable<string> columns) { return repo.Update(this, columns); }
			public static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
			public static int Update(Sql sql) { return repo.Update<T>(sql); }
			public int Delete() { return repo.Delete(this); }
			public static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
			public static int Delete(Sql sql) { return repo.Delete<T>(sql); }
			public static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
			public static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
			public static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
			public static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
			public static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
			public static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
			public static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
			public static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
			public static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
			public static T Single(Sql sql) { return repo.Single<T>(sql); }
			public static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
			public static T First(Sql sql) { return repo.First<T>(sql); }
			public static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
			public static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
			public static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
			public static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
			public static List<T> SkipTake(long skip, long take, string sql, params object[] args) { return repo.SkipTake<T>(skip, take, sql, args); }
			public static List<T> SkipTake(long skip, long take, Sql sql) { return repo.SkipTake<T>(skip, take, sql); }
			public static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
			public static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
			public static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
			public static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }
			
			private Dictionary<string,bool> ModifiedColumns;
			private void OnLoaded()
			{
				ModifiedColumns = new Dictionary<string,bool>();
			}
			protected void MarkColumnModified(string column_name)
			{
				if (ModifiedColumns!=null)
					ModifiedColumns[column_name]=true;
			}
			public int Update() 
			{ 
				if (ModifiedColumns==null)
					return repo.Update(this); 

				int retv = repo.Update(this, ModifiedColumns.Keys);
				ModifiedColumns.Clear();
				return retv;
			}
			public void Save() 
			{ 
				if (repo.IsNew(this))
					repo.Insert(this);
				else
					Update();
			}
		}
	}
	

    
	[TableName("RabbitMQ_Log")]
	[ExplicitColumns]
    public partial class RabbitMQ_Log : PPUtils.Record<RabbitMQ_Log>  
    {
        [Column] 
		public long? ThreadIndex 
		{ 
			get
			{
				return _ThreadIndex;
			}
			set
			{
				_ThreadIndex = value;
				MarkColumnModified("ThreadIndex");
			}
		}
		long? _ThreadIndex;

        [Column] 
		public long Order 
		{ 
			get
			{
				return _Order;
			}
			set
			{
				_Order = value;
				MarkColumnModified("Order");
			}
		}
		long _Order;

        [Column] 
		public double UsedTime 
		{ 
			get
			{
				return _UsedTime;
			}
			set
			{
				_UsedTime = value;
				MarkColumnModified("UsedTime");
			}
		}
		double _UsedTime;

	}
    
	[TableName("Billing_Transaction_Coin")]
	[ExplicitColumns]
    public partial class Billing_Transaction_Coin : PPUtils.Record<Billing_Transaction_Coin>  
    {
        [Column] 
		public long TransactionID 
		{ 
			get
			{
				return _TransactionID;
			}
			set
			{
				_TransactionID = value;
				MarkColumnModified("TransactionID");
			}
		}
		long _TransactionID;

        [Column] 
		public long RefTransactionID 
		{ 
			get
			{
				return _RefTransactionID;
			}
			set
			{
				_RefTransactionID = value;
				MarkColumnModified("RefTransactionID");
			}
		}
		long _RefTransactionID;

        [Column] 
		public DateTime TransactionTime 
		{ 
			get
			{
				return _TransactionTime;
			}
			set
			{
				_TransactionTime = value;
				MarkColumnModified("TransactionTime");
			}
		}
		DateTime _TransactionTime;

        [Column] 
		public int AccountNum 
		{ 
			get
			{
				return _AccountNum;
			}
			set
			{
				_AccountNum = value;
				MarkColumnModified("AccountNum");
			}
		}
		int _AccountNum;

        [Column] 
		public int SubAccount 
		{ 
			get
			{
				return _SubAccount;
			}
			set
			{
				_SubAccount = value;
				MarkColumnModified("SubAccount");
			}
		}
		int _SubAccount;

        [Column] 
		public string CreditTransactionType 
		{ 
			get
			{
				return _CreditTransactionType;
			}
			set
			{
				_CreditTransactionType = value;
				MarkColumnModified("CreditTransactionType");
			}
		}
		string _CreditTransactionType;

        [Column] 
		public long CreditTransactionTypeID 
		{ 
			get
			{
				return _CreditTransactionTypeID;
			}
			set
			{
				_CreditTransactionTypeID = value;
				MarkColumnModified("CreditTransactionTypeID");
			}
		}
		long _CreditTransactionTypeID;

        [Column] 
		public string CreditTransactionTypeRef 
		{ 
			get
			{
				return _CreditTransactionTypeRef;
			}
			set
			{
				_CreditTransactionTypeRef = value;
				MarkColumnModified("CreditTransactionTypeRef");
			}
		}
		string _CreditTransactionTypeRef;

        [Column] 
		public long ParentCreditTransactionTypeID 
		{ 
			get
			{
				return _ParentCreditTransactionTypeID;
			}
			set
			{
				_ParentCreditTransactionTypeID = value;
				MarkColumnModified("ParentCreditTransactionTypeID");
			}
		}
		long _ParentCreditTransactionTypeID;

        [Column] 
		public string OperationType 
		{ 
			get
			{
				return _OperationType;
			}
			set
			{
				_OperationType = value;
				MarkColumnModified("OperationType");
			}
		}
		string _OperationType;

        [Column] 
		public int InvoiceItemID 
		{ 
			get
			{
				return _InvoiceItemID;
			}
			set
			{
				_InvoiceItemID = value;
				MarkColumnModified("InvoiceItemID");
			}
		}
		int _InvoiceItemID;

        [Column] 
		public int InvoiceItemServiceID 
		{ 
			get
			{
				return _InvoiceItemServiceID;
			}
			set
			{
				_InvoiceItemServiceID = value;
				MarkColumnModified("InvoiceItemServiceID");
			}
		}
		int _InvoiceItemServiceID;

        [Column] 
		public int ServiceID 
		{ 
			get
			{
				return _ServiceID;
			}
			set
			{
				_ServiceID = value;
				MarkColumnModified("ServiceID");
			}
		}
		int _ServiceID;

        [Column] 
		public int CreditOnHoldChange 
		{ 
			get
			{
				return _CreditOnHoldChange;
			}
			set
			{
				_CreditOnHoldChange = value;
				MarkColumnModified("CreditOnHoldChange");
			}
		}
		int _CreditOnHoldChange;

        [Column] 
		public int CreditAvailableChange 
		{ 
			get
			{
				return _CreditAvailableChange;
			}
			set
			{
				_CreditAvailableChange = value;
				MarkColumnModified("CreditAvailableChange");
			}
		}
		int _CreditAvailableChange;

        [Column] 
		public int CreditOriginatedFromWhichSubAccount 
		{ 
			get
			{
				return _CreditOriginatedFromWhichSubAccount;
			}
			set
			{
				_CreditOriginatedFromWhichSubAccount = value;
				MarkColumnModified("CreditOriginatedFromWhichSubAccount");
			}
		}
		int _CreditOriginatedFromWhichSubAccount;

        [Column] 
		public bool MonthlyBalanceHandled 
		{ 
			get
			{
				return _MonthlyBalanceHandled;
			}
			set
			{
				_MonthlyBalanceHandled = value;
				MarkColumnModified("MonthlyBalanceHandled");
			}
		}
		bool _MonthlyBalanceHandled;

        [Column] 
		public string TransactionStatus 
		{ 
			get
			{
				return _TransactionStatus;
			}
			set
			{
				_TransactionStatus = value;
				MarkColumnModified("TransactionStatus");
			}
		}
		string _TransactionStatus;

        [Column] 
		public string AccountType 
		{ 
			get
			{
				return _AccountType;
			}
			set
			{
				_AccountType = value;
				MarkColumnModified("AccountType");
			}
		}
		string _AccountType;

        [Column] 
		public bool IsCreditOwner 
		{ 
			get
			{
				return _IsCreditOwner;
			}
			set
			{
				_IsCreditOwner = value;
				MarkColumnModified("IsCreditOwner");
			}
		}
		bool _IsCreditOwner;

        [Column] 
		public long ResumeRequestCandidateID 
		{ 
			get
			{
				return _ResumeRequestCandidateID;
			}
			set
			{
				_ResumeRequestCandidateID = value;
				MarkColumnModified("ResumeRequestCandidateID");
			}
		}
		long _ResumeRequestCandidateID;

	}
    
	[TableName("Sheet1$")]
	[ExplicitColumns]
    public partial class Sheet1_ : PPUtils.Record<Sheet1_>  
    {
        [Column("Browsers by Account ID ")] 
		public string Browsers_by_Account_ID_ 
		{ 
			get
			{
				return _Browsers_by_Account_ID_;
			}
			set
			{
				_Browsers_by_Account_ID_ = value;
				MarkColumnModified("Browsers by Account ID ");
			}
		}
		string _Browsers_by_Account_ID_;

        [Column] 
		public double? F2 
		{ 
			get
			{
				return _F2;
			}
			set
			{
				_F2 = value;
				MarkColumnModified("F2");
			}
		}
		double? _F2;

        [Column("Unique Visitors")] 
		public double? Unique_Visitors 
		{ 
			get
			{
				return _Unique_Visitors;
			}
			set
			{
				_Unique_Visitors = value;
				MarkColumnModified("Unique Visitors");
			}
		}
		double? _Unique_Visitors;

        [Column] 
		public double? F4 
		{ 
			get
			{
				return _F4;
			}
			set
			{
				_F4 = value;
				MarkColumnModified("F4");
			}
		}
		double? _F4;

        [Column("Page Views")] 
		public double? Page_Views 
		{ 
			get
			{
				return _Page_Views;
			}
			set
			{
				_Page_Views = value;
				MarkColumnModified("Page Views");
			}
		}
		double? _Page_Views;

        [Column] 
		public double? F6 
		{ 
			get
			{
				return _F6;
			}
			set
			{
				_F6 = value;
				MarkColumnModified("F6");
			}
		}
		double? _F6;

        [Column] 
		public double? Visits 
		{ 
			get
			{
				return _Visits;
			}
			set
			{
				_Visits = value;
				MarkColumnModified("Visits");
			}
		}
		double? _Visits;

        [Column] 
		public double? F8 
		{ 
			get
			{
				return _F8;
			}
			set
			{
				_F8 = value;
				MarkColumnModified("F8");
			}
		}
		double? _F8;

        [Column] 
		public double? F9 
		{ 
			get
			{
				return _F9;
			}
			set
			{
				_F9 = value;
				MarkColumnModified("F9");
			}
		}
		double? _F9;

	}
    
	[TableName("Sheet2$")]
	[ExplicitColumns]
    public partial class Sheet2_ : PPUtils.Record<Sheet2_>  
    {
        [Column] 
		public string F1 
		{ 
			get
			{
				return _F1;
			}
			set
			{
				_F1 = value;
				MarkColumnModified("F1");
			}
		}
		string _F1;

	}
    
	[TableName("Sheet3$")]
	[ExplicitColumns]
    public partial class Sheet3_ : PPUtils.Record<Sheet3_>  
    {
        [Column] 
		public string F1 
		{ 
			get
			{
				return _F1;
			}
			set
			{
				_F1 = value;
				MarkColumnModified("F1");
			}
		}
		string _F1;

	}
    
	[TableName("Account")]
	[ExplicitColumns]
    public partial class Account : PPUtils.Record<Account>  
    {
        [Column] 
		public long Id 
		{ 
			get
			{
				return _Id;
			}
			set
			{
				_Id = value;
				MarkColumnModified("Id");
			}
		}
		long _Id;

        [Column] 
		public string Name 
		{ 
			get
			{
				return _Name;
			}
			set
			{
				_Name = value;
				MarkColumnModified("Name");
			}
		}
		string _Name;

	}
    
	[TableName("Account_User")]
	[ExplicitColumns]
    public partial class Account_User : PPUtils.Record<Account_User>  
    {
        [Column] 
		public int Id 
		{ 
			get
			{
				return _Id;
			}
			set
			{
				_Id = value;
				MarkColumnModified("Id");
			}
		}
		int _Id;

        [Column] 
		public long AccountId 
		{ 
			get
			{
				return _AccountId;
			}
			set
			{
				_AccountId = value;
				MarkColumnModified("AccountId");
			}
		}
		long _AccountId;

        [Column] 
		public string UserName 
		{ 
			get
			{
				return _UserName;
			}
			set
			{
				_UserName = value;
				MarkColumnModified("UserName");
			}
		}
		string _UserName;

        [Column] 
		public string Password 
		{ 
			get
			{
				return _Password;
			}
			set
			{
				_Password = value;
				MarkColumnModified("Password");
			}
		}
		string _Password;

        [Column] 
		public string UserType 
		{ 
			get
			{
				return _UserType;
			}
			set
			{
				_UserType = value;
				MarkColumnModified("UserType");
			}
		}
		string _UserType;

        [Column] 
		public string Status 
		{ 
			get
			{
				return _Status;
			}
			set
			{
				_Status = value;
				MarkColumnModified("Status");
			}
		}
		string _Status;

        [Column] 
		public DateTime CreatedTime 
		{ 
			get
			{
				return _CreatedTime;
			}
			set
			{
				_CreatedTime = value;
				MarkColumnModified("CreatedTime");
			}
		}
		DateTime _CreatedTime;

        [Column] 
		public DateTime? LastedModifiedTime 
		{ 
			get
			{
				return _LastedModifiedTime;
			}
			set
			{
				_LastedModifiedTime = value;
				MarkColumnModified("LastedModifiedTime");
			}
		}
		DateTime? _LastedModifiedTime;

	}
    
	[TableName("Code_Category_Product")]
	[ExplicitColumns]
    public partial class Code_Category_Product : PPUtils.Record<Code_Category_Product>  
    {
        [Column] 
		public int Id 
		{ 
			get
			{
				return _Id;
			}
			set
			{
				_Id = value;
				MarkColumnModified("Id");
			}
		}
		int _Id;

        [Column] 
		public string Name 
		{ 
			get
			{
				return _Name;
			}
			set
			{
				_Name = value;
				MarkColumnModified("Name");
			}
		}
		string _Name;

        [Column] 
		public string Description 
		{ 
			get
			{
				return _Description;
			}
			set
			{
				_Description = value;
				MarkColumnModified("Description");
			}
		}
		string _Description;

	}
    
	[TableName("Customer")]
	[ExplicitColumns]
    public partial class Customer : PPUtils.Record<Customer>  
    {
        [Column] 
		public long Id 
		{ 
			get
			{
				return _Id;
			}
			set
			{
				_Id = value;
				MarkColumnModified("Id");
			}
		}
		long _Id;

        [Column] 
		public string Name 
		{ 
			get
			{
				return _Name;
			}
			set
			{
				_Name = value;
				MarkColumnModified("Name");
			}
		}
		string _Name;

	}
    
	[TableName("EmpCandidate_Comment")]
	[ExplicitColumns]
    public partial class EmpCandidate_Comment : PPUtils.Record<EmpCandidate_Comment>  
    {
        [Column] 
		public int Id 
		{ 
			get
			{
				return _Id;
			}
			set
			{
				_Id = value;
				MarkColumnModified("Id");
			}
		}
		int _Id;

        [Column] 
		public long CandidateId 
		{ 
			get
			{
				return _CandidateId;
			}
			set
			{
				_CandidateId = value;
				MarkColumnModified("CandidateId");
			}
		}
		long _CandidateId;

        [Column] 
		public int PostedBy 
		{ 
			get
			{
				return _PostedBy;
			}
			set
			{
				_PostedBy = value;
				MarkColumnModified("PostedBy");
			}
		}
		int _PostedBy;

        [Column] 
		public string TextValue 
		{ 
			get
			{
				return _TextValue;
			}
			set
			{
				_TextValue = value;
				MarkColumnModified("TextValue");
			}
		}
		string _TextValue;

        [Column] 
		public DateTime utcCreatedTime 
		{ 
			get
			{
				return _utcCreatedTime;
			}
			set
			{
				_utcCreatedTime = value;
				MarkColumnModified("utcCreatedTime");
			}
		}
		DateTime _utcCreatedTime;

        [Column] 
		public DateTime utcLastModifiedTime 
		{ 
			get
			{
				return _utcLastModifiedTime;
			}
			set
			{
				_utcLastModifiedTime = value;
				MarkColumnModified("utcLastModifiedTime");
			}
		}
		DateTime _utcLastModifiedTime;

        [Column] 
		public string Status 
		{ 
			get
			{
				return _Status;
			}
			set
			{
				_Status = value;
				MarkColumnModified("Status");
			}
		}
		string _Status;

	}
    
	[TableName("JobAd")]
	[ExplicitColumns]
    public partial class JobAd : PPUtils.Record<JobAd>  
    {
        [Column] 
		public long Id 
		{ 
			get
			{
				return _Id;
			}
			set
			{
				_Id = value;
				MarkColumnModified("Id");
			}
		}
		long _Id;

        [Column] 
		public int AccountNum 
		{ 
			get
			{
				return _AccountNum;
			}
			set
			{
				_AccountNum = value;
				MarkColumnModified("AccountNum");
			}
		}
		int _AccountNum;

        [Column] 
		public int SubAccount 
		{ 
			get
			{
				return _SubAccount;
			}
			set
			{
				_SubAccount = value;
				MarkColumnModified("SubAccount");
			}
		}
		int _SubAccount;

        [Column] 
		public int EmployerId 
		{ 
			get
			{
				return _EmployerId;
			}
			set
			{
				_EmployerId = value;
				MarkColumnModified("EmployerId");
			}
		}
		int _EmployerId;

        [Column] 
		public string RegCountry 
		{ 
			get
			{
				return _RegCountry;
			}
			set
			{
				_RegCountry = value;
				MarkColumnModified("RegCountry");
			}
		}
		string _RegCountry;

        [Column] 
		public string CountryCode 
		{ 
			get
			{
				return _CountryCode;
			}
			set
			{
				_CountryCode = value;
				MarkColumnModified("CountryCode");
			}
		}
		string _CountryCode;

        [Column] 
		public string CompanyLogoPath 
		{ 
			get
			{
				return _CompanyLogoPath;
			}
			set
			{
				_CompanyLogoPath = value;
				MarkColumnModified("CompanyLogoPath");
			}
		}
		string _CompanyLogoPath;

        [Column] 
		public int? CompanyLogoId 
		{ 
			get
			{
				return _CompanyLogoId;
			}
			set
			{
				_CompanyLogoId = value;
				MarkColumnModified("CompanyLogoId");
			}
		}
		int? _CompanyLogoId;

        [Column] 
		public byte AdditionalServices 
		{ 
			get
			{
				return _AdditionalServices;
			}
			set
			{
				_AdditionalServices = value;
				MarkColumnModified("AdditionalServices");
			}
		}
		byte _AdditionalServices;

        [Column] 
		public int BrandedAdTemplateId 
		{ 
			get
			{
				return _BrandedAdTemplateId;
			}
			set
			{
				_BrandedAdTemplateId = value;
				MarkColumnModified("BrandedAdTemplateId");
			}
		}
		int _BrandedAdTemplateId;

        [Column] 
		public string BrandedAdLogoFileName 
		{ 
			get
			{
				return _BrandedAdLogoFileName;
			}
			set
			{
				_BrandedAdLogoFileName = value;
				MarkColumnModified("BrandedAdLogoFileName");
			}
		}
		string _BrandedAdLogoFileName;

	}
    
	[TableName("Order")]
	[ExplicitColumns]
    public partial class Order : PPUtils.Record<Order>  
    {
        [Column] 
		public long Id 
		{ 
			get
			{
				return _Id;
			}
			set
			{
				_Id = value;
				MarkColumnModified("Id");
			}
		}
		long _Id;

        [Column] 
		public long CustomerId 
		{ 
			get
			{
				return _CustomerId;
			}
			set
			{
				_CustomerId = value;
				MarkColumnModified("CustomerId");
			}
		}
		long _CustomerId;

        [Column] 
		public long ProductId 
		{ 
			get
			{
				return _ProductId;
			}
			set
			{
				_ProductId = value;
				MarkColumnModified("ProductId");
			}
		}
		long _ProductId;

        [Column] 
		public DateTime CreatedTime 
		{ 
			get
			{
				return _CreatedTime;
			}
			set
			{
				_CreatedTime = value;
				MarkColumnModified("CreatedTime");
			}
		}
		DateTime _CreatedTime;

        [Column] 
		public decimal Price 
		{ 
			get
			{
				return _Price;
			}
			set
			{
				_Price = value;
				MarkColumnModified("Price");
			}
		}
		decimal _Price;

	}
    
	[TableName("Product")]
	[ExplicitColumns]
    public partial class Product : PPUtils.Record<Product>  
    {
        [Column] 
		public long Id 
		{ 
			get
			{
				return _Id;
			}
			set
			{
				_Id = value;
				MarkColumnModified("Id");
			}
		}
		long _Id;

        [Column] 
		public int CategoryId 
		{ 
			get
			{
				return _CategoryId;
			}
			set
			{
				_CategoryId = value;
				MarkColumnModified("CategoryId");
			}
		}
		int _CategoryId;

        [Column] 
		public string Name 
		{ 
			get
			{
				return _Name;
			}
			set
			{
				_Name = value;
				MarkColumnModified("Name");
			}
		}
		string _Name;

        [Column] 
		public string Description 
		{ 
			get
			{
				return _Description;
			}
			set
			{
				_Description = value;
				MarkColumnModified("Description");
			}
		}
		string _Description;

        [Column] 
		public decimal? UnitPrice 
		{ 
			get
			{
				return _UnitPrice;
			}
			set
			{
				_UnitPrice = value;
				MarkColumnModified("UnitPrice");
			}
		}
		decimal? _UnitPrice;

        [Column] 
		public string Status 
		{ 
			get
			{
				return _Status;
			}
			set
			{
				_Status = value;
				MarkColumnModified("Status");
			}
		}
		string _Status;

        [Column] 
		public DateTime CreatedTime 
		{ 
			get
			{
				return _CreatedTime;
			}
			set
			{
				_CreatedTime = value;
				MarkColumnModified("CreatedTime");
			}
		}
		DateTime _CreatedTime;

	}
    
	[TableName("Sys_KeyGen")]
	[ExplicitColumns]
    public partial class Sys_KeyGen : PPUtils.Record<Sys_KeyGen>  
    {
        [Column] 
		public int Id 
		{ 
			get
			{
				return _Id;
			}
			set
			{
				_Id = value;
				MarkColumnModified("Id");
			}
		}
		int _Id;

        [Column] 
		public long MaxKey 
		{ 
			get
			{
				return _MaxKey;
			}
			set
			{
				_MaxKey = value;
				MarkColumnModified("MaxKey");
			}
		}
		long _MaxKey;

        [Column] 
		public string Description 
		{ 
			get
			{
				return _Description;
			}
			set
			{
				_Description = value;
				MarkColumnModified("Description");
			}
		}
		string _Description;

	}
    
	[TableName("Sys_RefNumberGen")]
	[ExplicitColumns]
    public partial class Sys_RefNumberGen : PPUtils.Record<Sys_RefNumberGen>  
    {
        [Column] 
		public int Id 
		{ 
			get
			{
				return _Id;
			}
			set
			{
				_Id = value;
				MarkColumnModified("Id");
			}
		}
		int _Id;

        [Column] 
		public long MaxNumber 
		{ 
			get
			{
				return _MaxNumber;
			}
			set
			{
				_MaxNumber = value;
				MarkColumnModified("MaxNumber");
			}
		}
		long _MaxNumber;

        [Column] 
		public string Description 
		{ 
			get
			{
				return _Description;
			}
			set
			{
				_Description = value;
				MarkColumnModified("Description");
			}
		}
		string _Description;

	}
    
	[TableName("Test_Table")]
	[ExplicitColumns]
    public partial class Test_Table : PPUtils.Record<Test_Table>  
    {
        [Column] 
		public int Id 
		{ 
			get
			{
				return _Id;
			}
			set
			{
				_Id = value;
				MarkColumnModified("Id");
			}
		}
		int _Id;

        [Column] 
		public string Description 
		{ 
			get
			{
				return _Description;
			}
			set
			{
				_Description = value;
				MarkColumnModified("Description");
			}
		}
		string _Description;

        [Column] 
		public DateTime CreatedTime 
		{ 
			get
			{
				return _CreatedTime;
			}
			set
			{
				_CreatedTime = value;
				MarkColumnModified("CreatedTime");
			}
		}
		DateTime _CreatedTime;

	}
}


